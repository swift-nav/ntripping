name: Publish
on:
  push:
    tags:
      - '*'
jobs:
  build:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-18.04
            binary_target: x86_64-unknown-linux-musl
          - os: windows-2019
            binary_target: x86_64-pc-windows-msvc
          - os: macos-11
            binary_target: x86_64-apple-darwin
    outputs:
      version: ${{ steps.git_describe.outputs.result }}
    steps:
    - name: Install musl tools
      if: matrix.os == 'ubuntu-18.04'
      run: sudo apt-get install musl-tools
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install rust for target ${{ matrix.binary_target }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable-${{ matrix.binary_target }}
        profile: minimal
    - uses: davidB/rust-cargo-make@v1
    - name: Pull tags
      run: git fetch --tags --prune --unshallow --force
    - name: Fetch `git describe --tags`
      id: git_describe
      run: |
        echo "::set-output name=result::$(git describe --tags)"
    - name: Build Binary
      run: |
        cargo make
          --env CARGO_MAKE_RELEASE_FLOW_TARGET=${{ matrix.binary_target }}
          --env CARGO_MAKE_PROJECT_VERSION=${{ steps.git_describe.outputs.result }}
          zip-release-ci-flow"
    - name: Upload Binaries
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: '*.zip'
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
  
  post-build:
    name: Post Build
    runs-on: ubuntu-18.04
    needs: [ build ]
    steps:
      - name: Hook into package registry
        uses: swift-nav/swift-cli-publisher@v2
        env:
          DL_LINUX: "ntripping-${{ needs.build.outputs.version }}-x86_64-unknown-linux-musl.zip"
          DL_MAC: "ntripping-${{ needs.build.outputs.version }}-x86_64-apple-darwin.zip"
          DL_WIN: "ntripping-${{ needs.build.outputs.version }}-x86_64-pc-windows-msvc.zip"
          TOOLS: "ntripping"
        with:
          token: ${{ secrets.GH_TOKEN }}
          gh-name: ${{ secrets.GH_NAME }}
          gh-email: ${{ secrets.GH_EMAIL }}
