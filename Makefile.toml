[tasks.zip-release-binary-for-target]
description = "Zips up the release binary, README, and license(s)"
category = "Publish"
condition = { env_set = [
  "CARGO_MAKE_RELEASE_FLOW_TARGET",
  "CARGO_MAKE_PROJECT_NAME",
  "CARGO_MAKE_PROJECT_VERSION",
  "CARGO_MAKE_BINARY_EXECUTABLE_NAME",
], env_true = ["CARGO_MAKE_CI"] }
env = { "OUTPUT_NAME" = "${CARGO_MAKE_PROJECT_NAME}-${CARGO_MAKE_PROJECT_VERSION}-${CARGO_MAKE_RELEASE_FLOW_TARGET}" }
script_runner = "@duckscript"
script = '''
OUTPUT_NAME = get_env OUTPUT_NAME
CARGO_MAKE_RELEASE_FLOW_TARGET = get_env CARGO_MAKE_RELEASE_FLOW_TARGET
CARGO_MAKE_BINARY_EXECUTABLE_NAME = get_env CARGO_MAKE_BINARY_EXECUTABLE_NAME
echo "OUTPUT_NAME: ${OUTPUT_NAME}"
echo "CARGO_MAKE_RELEASE_FLOW_TARGET: ${CARGO_MAKE_RELEASE_FLOW_TARGET}"
echo "CARGO_MAKE_BINARY_EXECUTABLE_NAME: ${CARGO_MAKE_BINARY_EXECUTABLE_NAME}"
mkdir ${OUTPUT_NAME}
echo "Copying executable..."
glob_cp target/${CARGO_MAKE_RELEASE_FLOW_TARGET}/release/${CARGO_MAKE_BINARY_EXECUTABLE_NAME}* ${OUTPUT_NAME}
echo "Copying README..."
cp README.md ${OUTPUT_NAME}/README.md
echo "Copying LICENSE..."
cp LICENSE ${OUTPUT_NAME}/LICENSE
echo "Creating archive..."
exec --fail-on-error zip -r ${OUTPUT_NAME}.zip ${OUTPUT_NAME}
'''
